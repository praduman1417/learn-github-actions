name: learn-github-acctions
on:
  push:
  pull_request:
    
permissions:
  id-token: write # required to use OIDC authentication
  contents: read # required to checkout the code from the repo
jobs:
  demo:
    runs-on: ubuntu-latest
    steps:
      - name: demo step-1
        run: |
          echo "Execution: demo step-1"
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::687669071903:role/learn-github-actions
          role-duration-seconds: 900 # the ttl of the session, in seconds.
          aws-region: us-east-1 # use your region here.
      - name: check the S3 bucket list 
        run: aws s3 ls

      - name: Checkout
        uses: actions/checkout@v2
      # - name: execute shell script
      #   run:  |
      #     chmod u+x script.sh
      #     ./script.sh

      - name: make terraform cli
        uses: hashicorp/setup-terraform@v1

      # - name: run terraform fmt
      #   id: fmt
      #   run: terraform fmt -check

      - name: run terraform init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color             

      - name: run terraform plan 
        id: plan
        run: terraform plan -no-color
        env:
          GITHUB_TOKEN: ${{ github.token }}

      # - name: Update Pull Request
      #   uses: actions/github-script@0.9.0
      #   if: github.event_name == 'pull_request'
      #   env:
      #     PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     script: |
      #       github.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       })


      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: terraform apply
        run: terraform apply -auto-approve
        env:
          GITHUB_TOKEN: ${{ github.token }}